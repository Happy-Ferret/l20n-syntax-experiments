body                 ::= (entry '\n')* EOF;
entry                ::= comment
                      | message
                      ;

comment              ::= '#' .*;

identifier           ::= [a-zA-Z_.?-] ([a-zA-Z0-9_.?-])*;
variable             ::= '$' identifier;
keyword              ::= [^=|#{}\[\]()];
builtin              ::= [A-Z_.?-];
number               ::= [0-9]+ ('.' [0-9]+)?;
member               ::= '*'? '[' keyword ']' pattern '\n';

message              ::= identifier value? trait*;
value                ::= '=' pattern;
trait                ::= member;

pattern              ::= unquoted-pattern
                      |  quoted-pattern
                      ;
unquoted-pattern     ::= (unquoted-text | placeable)+;
quoted-pattern       ::= '"' (quoted-text | placeable)+ '"';
unquoted-text        ::= ([^{] | '\{')*;
quoted-text          ::= ([^{"] | '\{' | '\"')*;

placeable            ::= '{' placeable-list '}';
placeable-list       ::= placeable-expression (',' placeable-list)?;
placeable-expression ::= expression
                      |  select-expression
                      ;
expression           ::= quoted-pattern
                      |  number
                      |  identifier
                      |  variable-reference
                      |  call-expression
                      |  member-expression
                      ;
select-expression    ::= expression '->' variant+;
variant              ::= member;

call-expression      ::= builtin '(' arglist? ')';
arglist              ::= argument (',' arglist)?;
argument             ::= expression
                      |  keyword-argument;
keyword-argument     ::= identifier '=' quoted-pattern;

member-expression    ::= identifier '[' keyword ']';
